SELECT Citizenship_Ind, First_Gen_Ind, Poverty_Ind,

CASE 
WHEN FAFSA_IND = 'N'
THEN 'No FAFSA'
WHEN FAFSA_IND = 'Y' AND VERIF_SELECTION = 'N'
THEN 'NOT SELECTED FOR VERIF'
WHEN FAFSA_IND = 'Y' AND VERIF_SELECTION = 'Y' AND VERIF_COMPLETE = 'Y'
THEN 'VERIFICATION COMPLETE'
WHEN FAFSA_IND = 'Y' AND VERIF_SELECTION = 'Y' AND VERIF_COMPLETE = 'N'
THEN 'IN VERIFICATION'
ELSE NULL
END Verif_Ind,

RCRAPP1_VERIFICATION_MSG,

Packaged_Ind, RESIDENCY_DESC, SPRIDEN_ID, First_Name, Last_Name, Street_Line1, Street_Line2, Street_Line3, CITY, 
CASE
WHEN STATE_ABBR IS NULL
THEN 'INTERNATIONAL'
ELSE STATE_ABBR
END ADDR_STATE, ZIP, 

AREA_CODE||PERM_PHONE AS PERMANENT_PHONE, Mobile_AREA_code||Mobile_PHONE AS Mobile_PHONE,

Email, University_Email, STUDENT_TYPE, 

COLLEGE, COLLEGE_DESC, MAJOR, FIRST_CONCENTRATION, HS_GPA,

CONFIRMED, Registered_Ind

FROM(

SELECT 
DISTINCT SPRIDEN_ID, 
First_Name, 
Last_Name, 
Email, 
University_Email, 
FAFSA_IND,
VERIF_SELECTION,
VERIF_COMPLETE,
RCRAPP1_VERIFICATION_MSG,

    CASE 
        WHEN Citizenship_Ind = 'Y' THEN 'Y'
        ELSE 'N'
    END AS Citizenship_Ind,

    CASE
        WHEN First_Gen_Ind = 'CPFG' THEN 'Y'
        ELSE 'N'
    END AS First_Gen_Ind, 
    
    CASE
        WHEN household_size = 1 AND AGI <= 22590 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 1 AND AGI <= 28215 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 1 AND AGI <= 25965 THEN 'Y'
        WHEN household_size = 2 AND AGI <= 30660 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 2 AND AGI <= 38310 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 2 AND AGI <= 35250 THEN 'Y'
        WHEN household_size = 3 AND AGI <= 38730 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 3 AND AGI <= 48405 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 3 AND AGI <= 44535 THEN 'Y'
        WHEN household_size = 4 AND AGI <= 46800 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 4 AND AGI <= 58500 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 4 AND AGI <= 53820 THEN 'Y'
        WHEN household_size = 5 AND AGI <= 54870 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 5 AND AGI <= 68595 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 5 AND AGI <= 63105 THEN 'Y'
        WHEN household_size = 6 AND AGI <= 62940 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 6 AND AGI <= 78690 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 6 AND AGI <= 72390 THEN 'Y'
        WHEN household_size = 7 AND AGI <= 71010 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 7 AND AGI <= 88785 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 7 AND AGI <= 81675 THEN 'Y'
        WHEN household_size = 8 AND AGI <= 79080 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 8 AND AGI <= 98880 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 8 AND AGI <= 90960 THEN 'Y'
        WHEN household_size = 9 AND AGI <= 87150 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 9 AND AGI <= 108975 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 9 AND AGI <= 100245 THEN 'Y'
        WHEN household_size = 10 AND AGI <= 95220 AND STATE_RES NOT IN ('HI', 'AK') THEN 'Y'
        WHEN STATE_RES = 'AK' AND household_size = 10 AND AGI <= 119070 THEN 'Y'
        WHEN STATE_RES = 'HI' AND household_size = 10 AND AGI <= 109530 THEN 'Y'
        ELSE 'N'
    END AS Poverty_Ind,
    
    
    Packaged_Ind,
    
    CASE WHEN Registered_Ind > 0
    THEN 'Y'
    ELSE 'N'
    END AS Registered_Ind, 
    
    NEW_FRESHMAN_TRANSFER STUDENT_TYPE,
    Street_Line1, Street_Line2, Street_Line3, CITY, STATE_ABBR, ZIP, 
    AREA_CODE, PERM_PHONE, Mobile_AREA_CODE, 
    Mobile_PHONE, 
    COLLEGE, COLLEGE_DESC, MAJOR, FIRST_CONCENTRATION, RESIDENCY_DESC, HS_GPA, CONFIRMED
 
    
FROM
(SELECT 
SPRIDEN_PIDM,
SPRIDEN_ID,
SPRIDEN_FIRST_NAME First_Name, 
SPRIDEN_LAST_NAME Last_Name,
SPRADDR_STAT_CODE STATE_RES,


--SGBSTDN_STYP_CODE STU_TYPE,

CASE
WHEN RORSTAT_APPL_RCVD_DATE IS NOT NULL
THEN 'Y'
ELSE 'N'
END FAFSA_IND,

Case
When RRRAREQ_TREQ_CODE is not null
Then 'Y'
Else 'N'
End VERIF_SELECTION,

Case
When RRRAREQ_SAT_IND = 'Y'
Then 'Y'
Else 'N'
End VERIF_COMPLETE,

(SELECT GOREMAL_EMAIL_ADDRESS
        FROM GOREMAL
        WHERE SPRIDEN_PIDM = GOREMAL_PIDM
        AND GOREMAL_EMAL_CODE = 'P'
        AND GOREMAL_STATUS_IND = 'A'
        AND GOREMAL_PREFERRED_IND = 'Y') Email,
 
(SELECT GOREMAL_EMAIL_ADDRESS
        FROM GOREMAL
        WHERE SPRIDEN_PIDM = GOREMAL_PIDM
        AND GOREMAL_EMAL_CODE = 'U'
        AND GOREMAL_STATUS_IND = 'A') University_Email,
 
SPBPERS_CITZ_CODE Citizenship_Ind,

(SELECT SORTEST_TESC_CODE
        FROM SORTEST
        WHERE SORTEST_PIDM = SPRIDEN_PIDM
        AND SORTEST_TESC_CODE = 'CPFG'
        AND SORTEST_TEST_SCORE = 'Y'
        AND SORTEST_TEST_DATE = 
    (SELECT MAX(DISTINCT A.SORTEST_TEST_DATE)
            FROM SORTEST A
            WHERE A.SORTEST_PIDM = SPRIDEN_PIDM
            AND A.SORTEST_TESC_CODE = 'CPFG'
            AND A.SORTEST_TEST_SCORE = 'Y')) First_Gen_Ind,
    
POVERTY.household_size HOUSEHOLD_SIZE, POVERTY.AGI AGI,

RCRAPP1_VERIFICATION_MSG,

    CASE
        WHEN RORSTAT_PCKG_COMP_DATE IS NOT NULL
        THEN 'Y'
        ELSE 'N'
        END Packaged_Ind,

(SELECT SUM(SFRSTCR_CREDIT_HR)
        FROM SFRSTCR
        WHERE SPRIDEN_PIDM = SFRSTCR_PIDM
        AND SFRSTCR_TERM_CODE IN ('202460', '202480', '202510')
        AND SFRSTCR_RSTS_CODE IN ('RR', 'RW','R2','RE')) Registered_Ind,
        
SPRADDR_STREET_LINE1 Street_Line1, 
SPRADDR_STREET_LINE2 Street_Line2, 
SPRADDR_STREET_LINE3 Street_Line3, 
SPRADDR_CITY City, 
SPRADDR_STAT_CODE State_Abbr, 
SPRADDR_ZIP Zip, 
SPRADDR_STATUS_IND,

(Select SPRTELE_PHONE_AREA
from SPRTELE
where SPRTELE_PIDM = SPRIDEN_PIDM
and SPRTELE_TELE_CODE = 'PR'
and SPRTELE_STATUS_IND is null
and SPRTELE_SEQNO = 
    (Select MAX(A.SPRTELE_SEQNO)
    from SPRTELE A
    where A.SPRTELE_PIDM = SPRIDEN_PIDM
    and A.SPRTELE_TELE_CODE = 'PR'
    and A.SPRTELE_STATUS_IND is null))Area_Code, 
    
(Select SPRTELE_PHONE_NUMBER
from SPRTELE
where SPRTELE_PIDM = SPRIDEN_PIDM
and SPRTELE_TELE_CODE = 'PR'
and SPRTELE_STATUS_IND is null
and SPRTELE_SEQNO = 
    (Select MAX(A.SPRTELE_SEQNO)
    from SPRTELE A
    where A.SPRTELE_PIDM = SPRIDEN_PIDM
    and A.SPRTELE_TELE_CODE = 'PR'
    and A.SPRTELE_STATUS_IND is null))Perm_Phone, 
    
(Select DISTINCT SPRTELE_PHONE_AREA
from SPRTELE
where SPRTELE_PIDM = SPRIDEN_PIDM
--and SPRTELE_PRIMARY_IND = 'Y'
and SPRTELE_STATUS_IND is null
and SPRTELE_TELE_CODE = 'CELL'
and SPRTELE_SEQNO = 
    (Select MAX(A.SPRTELE_SEQNO)
    from SPRTELE A
    where A.SPRTELE_PIDM = SPRIDEN_PIDM
    --and A.SPRTELE_PRIMARY_IND = 'Y'
    and A.SPRTELE_TELE_CODE = 'CELL'
    and A.SPRTELE_STATUS_IND is null))Mobile_Area_Code,        

(Select MAX(SPRTELE_PHONE_NUMBER)
from SPRTELE
where SPRTELE_PIDM = SPRIDEN_PIDM
--and SPRTELE_PRIMARY_IND = 'Y'
and SPRTELE_STATUS_IND is null
and SPRTELE_TELE_CODE = 'CELL'
and SPRTELE_SEQNO = 
    (Select MAX(A.SPRTELE_SEQNO)
    from SPRTELE A
    where A.SPRTELE_PIDM = SPRIDEN_PIDM
    --and A.SPRTELE_PRIMARY_IND = 'Y'
    and A.SPRTELE_TELE_CODE = 'CELL'
    and A.SPRTELE_STATUS_IND is null))Mobile_Phone, 
        

STVRESD_DESC RESIDENCY_DESC, 
SGBSTDN_STYP_CODE Student_Type,
 SGBSTDN_COLL_CODE_1 College,
 STVCOLL_DESC College_Desc,
 SGBSTDN_MAJR_CODE_1 Major,
 STVMAJR_MAJOR_DESC Major_Desc, 
 SGBSTDN_MAJR_CODE_CONC_1 First_Concentration,
--HS_GPA, 

(SELECT SGBSTDN_STYP_CODE
FROM SGBSTDN
WHERE SGBSTDN_PIDM = SPRIDEN_PIDM
AND SGBSTDN_STST_CODE = 'AS'
AND SGBSTDN_LEVL_CODE = 'UG'
AND SGBSTDN_STYP_CODE IN ('F','T')
AND SGBSTDN_TERM_CODE_EFF = 
        (SELECT MAX(Z.SGBSTDN_TERM_CODE_EFF)
            FROM SGBSTDN Z
            WHERE Z.SGBSTDN_PIDM = SPRIDEN_PIDM 
            AND Z.SGBSTDN_TERM_CODE_EFF IN ('202460', '202480', '202510')
            AND Z.SGBSTDN_LEVL_CODE = 'UG'
            AND Z.SGBSTDN_STYP_CODE IN ('F','T'))) NEW_FRESHMAN_TRANSFER,
            
KSUAPPS.F_FIN_GET_sch_gpa(SPRIDEN_PIDM) HS_GPA,

(SELECT DISTINCT 'Y'
FROM GURMAIL
WHERE GURMAIL_PIDM = SPRIDEN_PIDM
AND GURMAIL_TERM_CODE IN ('202460', '202480', '202510')
AND GURMAIL_LETR_CODE IN ('ADM_MAT_FEE_PD', 'ADM_MAT_FEE_DEF')) CONFIRMED


FROM SPRIDEN

LEFT JOIN SGBSTDN
ON SGBSTDN_PIDM = SPRIDEN_PIDM

LEFT JOIN RORSTAT
ON SPRIDEN_PIDM = RORSTAT_PIDM
AND RORSTAT_AIDY_CODE = '2425'
--AND RORSTAT_PCKG_COMP_DATE IS NOT NULL
--AND RORSTAT_PGRP_CODE IN ('KFRES','KFNRES','TKFRES','TKFNRS')

LEFT JOIN STVCOLL
ON STVCOLL_CODE = SGBSTDN_COLL_CODE_1

LEFT JOIN STVMAJR
ON STVMAJR_CODE = SGBSTDN_MAJR_CODE_1

LEFT JOIN STVRESD
ON STVRESD_CODE = SGBSTDN_RESD_CODE

LEFT JOIN RRRAREQ
ON SPRIDEN_PIDM = RRRAREQ_PIDM
AND RRRAREQ_AIDY_CODE = '2425'
AND RRRAREQ_TREQ_CODE = 'VERIF'

LEFT JOIN SPBPERS
ON SPRIDEN_PIDM = SPBPERS_PIDM 
AND SPBPERS_CITZ_CODE = 'Y'
 
LEFT JOIN RCRAPP1
ON SPRIDEN_PIDM = RCRAPP1_PIDM
AND RCRAPP1_AIDY_CODE = '2425'
AND RCRAPP1_INFC_CODE = 'EDE'
AND RCRAPP1_CURR_REC_IND = 'Y'

LEFT JOIN SPRADDR
ON SPRIDEN_PIDM = SPRADDR_PIDM
AND spraddr_atyp_code = 'PR'
AND SPRADDR_TO_DATE IS NULL
AND SPRADDR_STATUS_IND IS NULL --- THIS LIMITS ADDRESS RETURNED TO MOST RECENT B/C THERE'S NO END DATE AND YOU DON'T WANT INACTIVE RECORD (IF STATUS IND IS NULL, IT SHOULD BE ACTIVE)



LEFT JOIN
(Select RCRAPP1_PIDM, RCRAPP1_AIDY_CODE,

CASE
        WHEN rcrapp1_fam_memb IS NOT NULL AND rcrapp1_par_fam_memb IS NOT NULL
        THEN rcrapp1_fam_memb + rcrapp1_par_fam_memb
        
        WHEN rcrapp1_fam_memb IS NOT NULL 
        THEN rcrapp1_fam_memb
        
        WHEN rcrapp1_par_fam_memb IS NOT NULL 
        THEN rcrapp1_par_fam_memb
        
        WHEN RCRESAR_A_FAM_MEMB IS NOT NULL AND RCRESAR_A_PAR_FAM_MEMB IS NOT NULL 
        THEN RCRESAR_A_FAM_MEMB + RCRESAR_A_PAR_FAM_MEMB
        
        WHEN RCRESAR_A_FAM_MEMB IS NOT NULL 
        THEN RCRESAR_A_FAM_MEMB
        
        WHEN RCRESAR_A_PAR_FAM_MEMB IS NOT NULL 
        THEN RCRESAR_A_PAR_FAM_MEMB
        
        WHEN RCVEDEA_FTI_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_PAR_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_PSP_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_SPS_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_NUM_EXEMPTIONS + RCVEDEA_FTI_PAR_NUM_EXEMPTIONS + RCVEDEA_FTI_PSP_NUM_EXEMPTIONS + RCVEDEA_FTI_SPS_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_PAR_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_PSP_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_NUM_EXEMPTIONS + RCVEDEA_FTI_PAR_NUM_EXEMPTIONS + RCVEDEA_FTI_PSP_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_NUM_EXEMPTIONS IS NOT NULL 
        AND RCVEDEA_FTI_PAR_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_NUM_EXEMPTIONS + RCVEDEA_FTI_PAR_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_PAR_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_PAR_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_PSP_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_PSP_NUM_EXEMPTIONS
        
        WHEN RCVEDEA_FTI_SPS_NUM_EXEMPTIONS IS NOT NULL 
        THEN RCVEDEA_FTI_SPS_NUM_EXEMPTIONS
        ELSE 1
    END AS household_size,

CASE
        WHEN RCVEDEA_FTI_PAR_AGI IS NOT NULL 
        AND RCVEDEA_FTI_PSP_AGI IS NOT NULL 
        AND RCVEDEA_FTI_AGI IS NOT NULL 
        AND RCVEDEA_FTI_SPS_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_PAR_AGI + RCVEDEA_FTI_PSP_AGI + RCVEDEA_FTI_AGI + RCVEDEA_FTI_SPS_AGI
        
        WHEN RCVEDEA_FTI_PAR_AGI IS NOT NULL 
        AND RCVEDEA_FTI_PSP_AGI IS NOT NULL 
        AND RCVEDEA_FTI_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_PAR_AGI + RCVEDEA_FTI_PSP_AGI + RCVEDEA_FTI_AGI
        
        WHEN RCVEDEA_FTI_PAR_AGI IS NOT NULL 
        AND RCVEDEA_FTI_PSP_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_PAR_AGI + RCVEDEA_FTI_PSP_AGI
        
        WHEN RCVEDEA_FTI_PAR_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_PAR_AGI
        
        WHEN RCVEDEA_FTI_PSP_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_PSP_AGI
        
        WHEN RCVEDEA_FTI_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_AGI
        
        WHEN RCVEDEA_FTI_SPS_AGI IS NOT NULL 
        THEN RCVEDEA_FTI_SPS_AGI
        
        WHEN RCRAPP1_PAR_US_INC IS NOT NULL 
        AND RCVEDEA_PSP_US_INC IS NOT NULL 
        AND RCRAPP1_US_INC IS NOT NULL 
        AND RCVEDEA_SPS_US_INC IS NOT NULL 
        THEN RCRAPP1_PAR_US_INC + RCVEDEA_PSP_US_INC + RCRAPP1_US_INC + RCVEDEA_SPS_US_INC
        
        WHEN RCRAPP1_PAR_US_INC IS NOT NULL 
        AND RCVEDEA_PSP_US_INC IS NOT NULL 
        AND RCRAPP1_US_INC IS NOT NULL 
        THEN RCRAPP1_PAR_US_INC + RCVEDEA_PSP_US_INC + RCRAPP1_US_INC
        
        WHEN RCRAPP1_PAR_US_INC IS NOT NULL 
        AND RCVEDEA_PSP_US_INC IS NOT NULL 
        THEN RCRAPP1_PAR_US_INC + RCVEDEA_PSP_US_INC
        
        WHEN RCRAPP1_PAR_US_INC IS NOT NULL 
        THEN RCRAPP1_PAR_US_INC
        
        WHEN RCVEDEA_PSP_US_INC IS NOT NULL 
        THEN RCVEDEA_PSP_US_INC
        
        WHEN RCRAPP1_US_INC IS NOT NULL 
        THEN RCRAPP1_US_INC
        
        WHEN RCVEDEA_SPS_US_INC IS NOT NULL 
        THEN RCVEDEA_SPS_US_INC
        ELSE NULL
    END AS AGI

from RCRAPP1

left join RCRAPP2
on RCRAPP1_PIDM = RCRAPP2_PIDM
and RCRAPP1_SEQ_NO = RCRAPP2_SEQ_NO
and RCRAPP1_INFC_CODE = RCRAPP2_INFC_CODE
and RCRAPP1_AIDY_CODE = RCRAPP2_AIDY_CODE

LEFT JOIN RCVEDEA
ON RCVEDEA_PIDM = RCRAPP1_PIDM
and RCRAPP1_SEQ_NO = RCVEDEA_SEQ_NO
and RCRAPP1_INFC_CODE = RCVEDEA_INFC_CODE
and RCRAPP1_AIDY_CODE = RCVEDEA_AIDY_CODE

LEFT JOIN RCRESAR
ON RCRESAR_PIDM = RCRAPP1_PIDM
AND RCRESAR_AIDY_CODE = RCRAPP1_AIDY_CODE
AND RCRESAR_INFC_CODE = RCRAPP1_INFC_CODE
AND RCRESAR_SEQ_NO = RCRAPP1_SEQ_NO

where RCRAPP1_AIDY_CODE = '2425'
and RCRAPP1_INFC_CODE = 'EDE'
and RCRAPP1_CURR_REC_IND = 'Y') POVERTY

ON SPRIDEN_PIDM = POVERTY.RCRAPP1_PIDM


WHERE SPRIDEN_CHANGE_IND IS NULL 
AND SGBSTDN_TERM_CODE_EFF =
   (SELECT MAX(Z.SGBSTDN_TERM_CODE_EFF)
   FROM SGBSTDN Z
   WHERE Z.SGBSTDN_PIDM = SPRIDEN_PIDM
   AND Z.SGBSTDN_TERM_CODE_EFF <= '202480')
AND SGBSTDN_STST_CODE = 'AS'
AND RRRAREQ_TREQ_CODE <> 'FAFREJ'
)
WHERE NEW_FRESHMAN_TRANSFER IS NOT NULL
)


ORDER BY 1
